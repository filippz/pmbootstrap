From 163b3987084a64e30a28cf962394b1d9522cd269 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Filip=20Matijevi=C4=87?= <filip.matijevic.pz@gmail.com>
Date: Thu, 24 Dec 2015 16:07:04 +0100
Subject: [PATCH 18/53] mfd: wl1273: Add device tree support
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Filip MatijeviÄ‡ <filip.matijevic.pz@gmail.com>
---
 .../devicetree/bindings/media/ti-wl1273.txt        | 34 ++++++++++++++++++
 drivers/media/radio/radio-wl1273.c                 | 18 ++++++----
 drivers/mfd/wl1273-core.c                          | 40 ++++++++++++++++++++--
 3 files changed, 83 insertions(+), 9 deletions(-)
 create mode 100644 Documentation/devicetree/bindings/media/ti-wl1273.txt

diff --git a/Documentation/devicetree/bindings/media/ti-wl1273.txt b/Documentation/devicetree/bindings/media/ti-wl1273.txt
new file mode 100644
index 000000000000..652243ec181a
--- /dev/null
+++ b/Documentation/devicetree/bindings/media/ti-wl1273.txt
@@ -0,0 +1,34 @@
+Texas Instruments - wl1273 radio/bluetooth module
+
+Required properties:
+
+- compatible - "ti,wl1273-core"
+- reg - I2C slave address
+- interrupts       - The interrupt output from the device.
+- interrupt-parent - The parent interrupt controller.
+- wl1273radio child - compatible = "ti,wl1273-fm-radio";
+
+Optional properties:
+
+- wl1273codec child - compatible = "ti,wl1273codec";
+
+Example:
+
+wl1273core: wl1273core@22 {
+		compatible = "ti,wl1273-core";
+		reg = <0x22>;
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&wl1273_gpio>;
+
+		interrupt-parent = <&gpio2>;
+		interrupts = <11 2>; /* gpio_43, IRQF_TRIGGER_FALLING */
+
+		wl1273radio: wl1273radio {
+			compatible = "ti,wl1273-fm-radio";
+		};
+
+		wl1273codec: wl1273codec {
+			compatible = "ti,wl1273-codec";
+		};
+	};
diff --git a/drivers/media/radio/radio-wl1273.c b/drivers/media/radio/radio-wl1273.c
index 9ce4b12299b4..bf575deef901 100644
--- a/drivers/media/radio/radio-wl1273.c
+++ b/drivers/media/radio/radio-wl1273.c
@@ -2048,12 +2048,15 @@ static int wl1273_fm_radio_probe(struct platform_device *pdev)
	radio->stereo = true;
	radio->bus_type = "I2C";

-	if (radio->core->pdata->request_resources) {
-		r = radio->core->pdata->request_resources(radio->core->client);
-		if (r) {
-			dev_err(radio->dev, WL1273_FM_DRIVER_NAME
-				": Cannot get platform data\n");
-			goto pdata_err;
+	if ((radio->core->pdata->request_resources)
+		|| (radio->core->client->irq)) {
+		if (radio->core->pdata->request_resources) {
+			r = radio->core->pdata->request_resources(radio->core->client);
+			if (r) {
+				dev_err(radio->dev, WL1273_FM_DRIVER_NAME
+					": Cannot get platform data\n");
+				goto pdata_err;
+			}
		}

		dev_dbg(radio->dev, "irq: %d\n", radio->core->client->irq);
@@ -2146,7 +2149,8 @@ static int wl1273_fm_radio_probe(struct platform_device *pdev)
 write_buf_err:
	free_irq(radio->core->client->irq, radio);
 err_request_irq:
-	radio->core->pdata->free_resources();
+	if (radio->core->pdata->free_resources)
+		radio->core->pdata->free_resources();
 pdata_err:
	return r;
 }
diff --git a/drivers/mfd/wl1273-core.c b/drivers/mfd/wl1273-core.c
index 708046592b33..1d71e1979609 100644
--- a/drivers/mfd/wl1273-core.c
+++ b/drivers/mfd/wl1273-core.c
@@ -170,6 +170,28 @@ static int wl1273_fm_set_volume(struct wl1273_core *core, unsigned int volume)
	return 0;
 }

+static struct wl1273_fm_platform_data *
+wl1273_core_of_probe(struct device *dev)
+{
+	struct device_node *np = dev->of_node;
+	struct wl1273_fm_platform_data *pdata;
+	struct device_node *child;
+
+
+	pdata = devm_kzalloc(dev, sizeof(*pdata), GFP_KERNEL);
+	if (!pdata)
+		return ERR_PTR(-ENOMEM);
+
+	for_each_child_of_node(np, child) {
+		if (of_device_is_compatible(child, "ti,wl1273-fm-radio"))
+			pdata->children |= WL1273_RADIO_CHILD;
+		if (of_device_is_compatible(child, "ti,wl1273-codec"))
+			pdata->children |= WL1273_CODEC_CHILD;
+	}
+
+	return pdata;
+}
+
 static int wl1273_core_probe(struct i2c_client *client,
				       const struct i2c_device_id *id)
 {
@@ -182,8 +204,11 @@ static int wl1273_core_probe(struct i2c_client *client,
	dev_dbg(&client->dev, "%s\n", __func__);

	if (!pdata) {
-		dev_err(&client->dev, "No platform data.\n");
-		return -EINVAL;
+		pdata = wl1273_core_of_probe(&client->dev);
+		if (IS_ERR(pdata)) {
+			dev_err(&client->dev, "No platform data or DT found\n");
+			return PTR_ERR(pdata);
+		}
	}

	if (!(pdata->children & WL1273_RADIO_CHILD)) {
@@ -205,6 +230,7 @@ static int wl1273_core_probe(struct i2c_client *client,

	cell = &core->cells[children];
	cell->name = "wl1273_fm_radio";
+	cell->of_compatible = "ti,wl1273-fm-radio";
	cell->platform_data = &core;
	cell->pdata_size = sizeof(core);
	children++;
@@ -220,6 +246,7 @@ static int wl1273_core_probe(struct i2c_client *client,

		dev_dbg(&client->dev, "%s: Have codec.\n", __func__);
		cell->name = "wl1273-codec";
+		cell->of_compatible = "ti,wl1273-codec";
		cell->platform_data = &core;
		cell->pdata_size = sizeof(core);
		children++;
@@ -243,9 +270,18 @@ static int wl1273_core_probe(struct i2c_client *client,
	return r;
 }

+static const struct of_device_id wl1273_core_match[] = {
+	{ .compatible = "ti,wl1273-core", },
+	{}
+};
+
+MODULE_DEVICE_TABLE(i2c, wl1273_core_match);
+
+
 static struct i2c_driver wl1273_core_driver = {
	.driver = {
		.name = WL1273_FM_DRIVER_NAME,
+		.of_match_table = of_match_ptr(wl1273_core_match),
	},
	.probe = wl1273_core_probe,
	.id_table = wl1273_driver_id_table,
--
2.11.0
